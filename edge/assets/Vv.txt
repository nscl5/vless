عالیه! برای اضافه کردن این دو مخزن، باید چند تغییر اعمال کنیم:

## تغییرات مورد نیاز:

### 1. در فایل `test-proxies.js` - تابع جدید برای fetch کردن داده‌ها:

در حدود خط 120 (بعد از تابع `processProxiesInBatches`), این کد رو اضافه کن:

```javascript
// تابع برای دریافت پروکسی‌ها از مخزن اول
async function fetchNauticaProxies() {
  try {
    console.log('Fetching proxies from Nautica repository...');
    const response = await fetch('https://raw.githubusercontent.com/FoolVPN-ID/Nautica/refs/heads/main/proxyList.txt', {
      headers: { 'User-Agent': 'Mozilla/5.0 (compatible; ProxyTester/1.0)' },
      signal: AbortSignal.timeout(15000)
    });
    
    if (!response.ok) throw new Error(`HTTP ${response.status}`);
    
    const content = await response.text();
    const proxies = [];
    
    content.split(/\r?\n/).forEach(line => {
      const parts = line.trim().split(',');
      if (parts.length >= 2) {
        const ip = parts[0].trim();
        const port = parts[1].trim();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(ip) && port === '443') {
          proxies.push([ip, port]);
        }
      }
    });
    
    console.log(`Found ${proxies.length} port 443 proxies from Nautica`);
    return proxies;
  } catch (error) {
    console.error('Failed to fetch Nautica proxies:', error.message);
    return [];
  }
}

// تابع برای دریافت پروکسی‌ها از مخزن دوم
async function fetchNiRevilProxies() {
  try {
    console.log('Fetching proxies from NiREvil repository...');
    const response = await fetch('https://raw.githubusercontent.com/NiREvil/vless/refs/heads/main/sub/ProxyIP.md', {
      headers: { 'User-Agent': 'Mozilla/5.0 (compatible; ProxyTester/1.0)' },
      signal: AbortSignal.timeout(15000)
    });
    
    if (!response.ok) throw new Error(`HTTP ${response.status}`);
    
    const content = await response.text();
    const proxies = [];
    
    // استخراج IP ها از بلوک های yaml
    const yamlBlocks = content.match(/```yaml\s*\n([^\`]+)\n```/g);
    if (yamlBlocks) {
      yamlBlocks.forEach(block => {
        const ip = block.replace(/```yaml\s*\n/, '').replace(/\n```/, '').trim();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(ip)) {
          proxies.push([ip, '443']); // همه رو با پورت 443 فرض میکنیم
        }
      });
    }
    
    console.log(`Found ${proxies.length} proxies from NiREvil`);
    return proxies;
  } catch (error) {
    console.error('Failed to fetch NiREvil proxies:', error.message);
    return [];
  }
}
```

### 2. در همون فایل - تغییر تابع `main()`:

حدود خط 160، بخش خواندن CSV رو با این جایگزین کن:

```javascript
// دریافت پروکسی‌ها از منابع مختلف
const allProxySources = [];

// 1. خواندن فایل CSV محلی
const proxyFilePath = path.join(__dirname, '../sub/country_proxies/02_proxies.csv');
if (fs.existsSync(proxyFilePath)) {
  const rawContent = fs.readFileSync(proxyFilePath, 'utf-8');
  const lines = rawContent.split(/\r?\n/);
  
  console.log(`Processing CSV with ${lines.length} lines...`);
  
  for (const line of lines) {
    if (!line || line.startsWith('IP Address') || line.startsWith('﻿IP Address')) continue;
    
    const parts = line.trim().split(',');
    if (parts.length >= 2) {
      const ip = parts[0].trim();
      const port = parts[1].trim();
      
      if (ip && port === '443' && /^\d+\.\d+\.\d+\.\d+$/.test(ip)) {
        allProxySources.push([ip, port]);
      }
    }
  }
  console.log(`Found ${allProxySources.length} proxies from local CSV`);
}

// 2. دریافت از مخازن آنلاین
const nauticaProxies = await fetchNauticaProxies();
const niRevilProxies = await fetchNiRevilProxies();

allProxySources.push(...nauticaProxies);
allProxySources.push(...niRevilProxies);

// حذف موارد تکراری
const uniqueProxies = Array.from(
  new Map(allProxySources.map(([ip, port]) => [`${ip}:${port}`, [ip, port]])).values()
);

console.log(`Total unique proxies from all sources: ${uniqueProxies.length}`);
```

### 3. بقیه کد بدون تغییر باقی میمونه!

فقط متغیر `ipPortCombinations` رو حذف کن چون دیگه استفاده نمیشه.

---

این تغییرات باعث میشه که:
- از 3 منبع پروکسی دریافت کنه
- فقط پورت 443 رو فیلتر کنه  
- تکراری‌ها رو حذف کنه
- همون پردازش batch و تست‌های قبلی رو انجام بده

حالا باید تعداد خیلی بیشتری پروکسی داشته باشی! 🚀
